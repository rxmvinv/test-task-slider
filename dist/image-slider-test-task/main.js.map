{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api-interaction.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/new-slide/new-slide.component.css","webpack:///./src/app/new-slide/new-slide.component.html","webpack:///./src/app/new-slide/new-slide.component.ts","webpack:///./src/app/slide.ts","webpack:///./src/app/slide/slide.component.css","webpack:///./src/app/slide/slide.component.html","webpack:///./src/app/slide/slide.component.ts","webpack:///./src/app/slider/slider.component.css","webpack:///./src/app/slider/slider.component.html","webpack:///./src/app/slider/slider.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable, ErrorHandler } from '@angular/core';\nimport { Slide } from './slide';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n//import { HttpClientModule, HttpHeaders } from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n     'Content-Type': 'application/json; charset=utf-8'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiInteractionService {\n\n  getSlides (): Observable<Slide[]> {\n    return this.http.get<Slide[]>(this.apiUrl, httpOptions).pipe(\n      tap(\n        data => console.log(data),\n        error => console.log(error)\n      )\n    )\n  }\n\n  addSlide (slide: Slide): Observable<Slide> {\n    return this.http.post<Slide>(this.apiUrl, slide, httpOptions)\n    .pipe(\n      tap(\n        data => console.log(data),\n        error => console.log(error)\n      )\n    )\n  }\n\n  removeSlide (slide: Slide | number): Observable<Slide> {\n      const id = typeof slide === 'number' ? slide : slide.id;\n      const url = `${this.apiUrl}/${id}`;\n\n      return this.http.delete<Slide>(url, httpOptions).pipe(\n        tap(\n          data => console.log(data),\n          error => console.log(error)\n        )\n      );\n  }\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  private apiUrl = 'http://localhost:3000/api/slides';\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n//import { HttpClient } from '@angular/common/http';\nimport { SliderComponent } from './slider/slider.component';\nimport { NewSlideComponent } from './new-slide/new-slide.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nconst routes: Routes = [\n  { path: '', component: SliderComponent},\n  { path: 'new-slide', component: NewSlideComponent }\n];\n\n@NgModule({\n  //imports: [ RouterModule.forRoot(routes), HttpClientModule ],\n  imports: [ RouterModule.forRoot(routes), HttpClientModule ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>Test slider</h1>\\n  <!--<app-slider></app-slider>-->\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'image-slider-test-task';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { SliderComponent } from './slider/slider.component';\nimport { SlideComponent } from './slide/slide.component';\nimport { NewSlideComponent } from './new-slide/new-slide.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SliderComponent,\n    SlideComponent,\n    NewSlideComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".keyframe-animated {\\r\\n  animation: simplefadein 0.4s 1 ease-in-out forwards;\\r\\n  -webkit-animation: @-webkit-simplefadein 0.4s 1 ease-in-out forwards;\\r\\n}\\r\\n\\r\\nform {\\r\\n  width: 100%;\\r\\n  max-width: 500px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.invalid {\\r\\n  border: 1px solid red;\\r\\n}\\r\\n\\r\\n@keyframes simplefadein {\\r\\n  0% {-webkit-transform: scale(0);transform: scale(0)}\\r\\n  100% {-webkit-transform: scale(1);transform: scale(1)}\\r\\n}\\r\\n\\r\\n@-webkit-keyframes simplefadein {\\r\\n  0% {-webkit-transform: scale(0);transform: scale(0)}\\r\\n  100% {-webkit-transform: scale(1);transform: scale(1)}\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container keyframe-animated\\\">\\n    <h1>New Slide</h1>\\n    <form [formGroup]=\\\"insertedSlide\\\" (ngSubmit)=\\\"onSubmit(insertedSlide.value)\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"title\\\">Title:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" required [class.invalid]=\\\"validState\\\"  (change)=\\\"onTitleChange($event)\\\" name=\\\"title\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"description\\\">Description:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" required [class.invalid]=\\\"validState\\\" (change)=\\\"onDescriptionChange($event)\\\" name=\\\"description\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"image\\\">Image:</label>\\n        <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"onFileChange($event)\\\" name=\\\"image\\\" />\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"embedded\\\">Url:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" (change)=\\\"onEmbeddedChange($event)\\\" name=\\\"embedded\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\" *ngIf=\\\"validState\\\">{{validState}}</div>\\n\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n\\n    </form>\\n</div>\\n\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ApiInteractionService } from '../api-interaction.service';\nimport { FormsModule, FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Slide } from '../slide';\n\n@Component({\n  selector: 'app-new-slide',\n  templateUrl: './new-slide.component.html',\n  styleUrls: ['./new-slide.component.css']\n})\n\nexport class NewSlideComponent implements OnInit {\n  /*\n  formGroup = this.fb.group({\n    file: [null, Validators.required]\n  });\n  */\n\n  insertedSlide: FormGroup;\n  validState: String;\n\n  constructor(private fb: FormBuilder, private cd: ChangeDetectorRef, private apiService: ApiInteractionService, private location: Location) { }\n\n  ngOnInit() {\n    this.insertedSlide = new FormGroup({\n           title: new FormControl(null, [Validators.required]),\n           description: new FormControl([Validators.required]),\n           image: new FormControl([null, Validators.required]),\n           embedded: new FormControl()\n    });\n  }\n\n  onTitleChange(event) {\n    this.insertedSlide.value.title = event.target.value;\n  }\n\n  onDescriptionChange(event) {\n    this.insertedSlide.value.description = event.target.value;\n  }\n\n\n\n  onFileChange(event) {\n    //console.log(event.target.value);\n\n    let reader = new FileReader();\n\n    if(event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n\n      reader.onload = () => {\n        this.insertedSlide.value.image = reader.result;\n        // need to run CD since file load runs outside of zone\n        this.cd.markForCheck();\n      };\n    }\n\n  }\n\n  onEmbeddedChange(event) {\n    this.insertedSlide.value.embedded = event.target.value;\n  }\n\n  onSubmit(formValue): void {\n    if (typeof formValue.image !== 'string') {\n       formValue.image = '/assets/images/default.png';\n    }\n\n    if (!formValue.embedded) {\n      formValue.embedded = 'empty';\n    }\n\n    if (formValue.title && formValue.description) {\n      console.log(formValue);\n\n      this.apiService.addSlide(formValue).subscribe()\n      console.log(\"Form Submitted!\");\n      location.replace('/');\n    } else {\n      this.validState = 'Required title and description fields';\n      return;\n    }\n  }\n\n}\n","export class Slide {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  image: string;\r\n  embedded: string\r\n}\r\n","module.exports = \".remove-slide {\\r\\n  display: block;\\r\\n  margin: auto;\\r\\n}\\r\\n\"","module.exports = \"<div>\\n  <img src=\\\"{{slide.image}}\\\" alt=\\\"image\\\" class=\\\"d-block w-100\\\">\\n  <div class=\\\"carousel-caption d-none d-md-block\\\">\\n    {{slide.title}}\\n    <div>\\n      <p>{{slide.description}}</p>\\n      <span>Iframe: {{slide.embedded}}</span>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger remove-slide\\\" name=\\\"remove-slide\\\" (click)=\\\"onRemove(slide)\\\">remove</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Slide } from '../slide';\nimport { Location } from '@angular/common';\nimport { ApiInteractionService } from '../api-interaction.service';\n//import * as $ from 'jquery';\n\n@Component({\n  selector: 'app-slide',\n  templateUrl: './slide.component.html',\n  styleUrls: ['./slide.component.css']\n})\nexport class SlideComponent implements OnInit {\n  @Input() slide: Slide;\n\n  constructor(private apiService: ApiInteractionService, private location: Location) { }\n\n  ngOnInit() {\n  }\n  onRemove(slide: Slide): void {\n    this.apiService.removeSlide(slide).subscribe()\n    location.reload()\n  }\n\n}\n","module.exports = \".add-new-slide {\\n  margin: 30px auto;\\n}\\n\"","module.exports = \"\\n  <h2>Slides</h2>\\n  <p *ngIf=\\\"message\\\">{{message}}</p>\\n  <div id=\\\"carouselExampleControls\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n    <ol class=\\\"carousel-indicators\\\">\\n      <li *ngFor=\\\"let slide of slides; let index = index\\\" data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"index\\\" [class.active]=\\\"index == 0\\\"></li>\\n    </ol>\\n    <div  class=\\\"carousel-inner\\\">\\n        <app-slide  *ngFor=\\\"let slide of slides; let index = index\\\" [slide]=\\\"slide\\\" class=\\\"carousel-item\\\" [class.active]=\\\"index == 0\\\"></app-slide>\\n        <!--<app-slide  *ngFor=\\\"let slide of slides\\\" [slide]=\\\"{ $implicit: slide }\\\"></app-slide>-->\\n        <a class=\\\"carousel-control-prev\\\" href=\\\"#carouselExampleControls\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\n          <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n          <span class=\\\"sr-only\\\">Previous</span>\\n        </a>\\n        <a class=\\\"carousel-control-next\\\" href=\\\"#carouselExampleControls\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\n          <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n          <span class=\\\"sr-only\\\">Next</span>\\n        </a>\\n    </div>\\n  </div>\\n\\n  <a class=\\\"btn btn-primary add-new-slide\\\" routerLink=\\\"/new-slide\\\">Add New</a>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Slide } from '../slide';\nimport { ApiInteractionService } from '../api-interaction.service';\n//import * as $ from 'jquery';\ndeclare var $:any;\n\n@Component({\n  selector: 'app-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.css']\n})\nexport class SliderComponent implements OnInit {\n  slides: Slide[];\n  message: String;\n\n  constructor(private apiService: ApiInteractionService) { }\n\n  ngOnInit() {\n    this.loadSlides();\n    $('.carousel').carousel({interval: 5000});\n  }\n  loadSlides(): void {\n    this.apiService.getSlides()\n      .subscribe(slides => {\n         this.slides = slides;\n         setTimeout(() => {\n           this.message = this.slides.length ? '' : 'There is no slides...';\n           console.log(this.slides);\n         }, 500)\n       })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}